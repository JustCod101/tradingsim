spring:
  profiles:
    active: dev
  
  application:
    name: tradingsim-backend
  
  # 数据源配置
  datasource:
    url: jdbc:postgresql://localhost:5432/market
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
  
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        connection:
          handling_mode: DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION
  
  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  
  # WebSocket配置
  websocket:
    allowed-origins: "*"
    sockjs:
      enabled: true
    stomp:
      enabled: true
  
  # Jackson配置
  jackson:
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

# 服务器配置
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
  error:
    include-stacktrace: never
    include-message: always

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# 日志配置
logging:
  level:
    com.tradingsim: INFO
    org.springframework.web: DEBUG
    org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: DEBUG
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# 应用自定义配置
tradingsim:
  # 游戏配置
  game:
    max-sessions-per-user: 5
    session-timeout-minutes: 30
    default-initial-balance: 100000.0
    max-decision-time-seconds: 30
    
  # 市场数据配置
  market:
    data-retention-days: 365
    cache-ttl-minutes: 60
    batch-size: 1000
    
  # 安全配置
  security:
    jwt:
      secret: "tradingsim-super-secret-key-for-jwt-token-generation-and-validation-must-be-at-least-512-bits-long-for-hs512-algorithm"
      expiration: 86400  # 24小时
      refresh-expiration: 604800  # 7天
    cors:
      allowed-origins: 
        - "http://localhost:3000"
        - "http://localhost:5173"
      allowed-methods: 
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowed-headers: "*"
      allow-credentials: true
      max-age: 3600
    
  # 缓存配置
  cache:
    default-ttl: 3600
    market-data-ttl: 1800
    user-stats-ttl: 300
    
  # 监控配置
  monitoring:
    metrics:
      enabled: true
      export-interval: 60
    alerts:
      enabled: true
      thresholds:
        error-rate: 0.05
        response-time: 1000

# Alpha Vantage API配置
alphavantage:
  api:
    key: 0M5AWAPC9F2U2SE6  # 使用真实API key
    enabled: true